{"version":3,"file":"static/js/797.a275ba9a.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/MoveisList/MoviesList.jsx","pages/MoviesPage.jsx","services/getMovies.js"],"sourcesContent":["import { DNA } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <DNA\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"dna-wrapper\"\n    />\n  );\n};\n\nexport default Loader;\n","import { Link } from 'react-router-dom';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <div className=\"box-home\">\n      <ul className=\"box-home__list\">\n        {movies.map(\n          ({ original_title, id }) =>\n            original_title !== undefined && (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  {original_title}\n                </Link>\n              </li>\n            )\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","import Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoveisList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getMovieSearch } from 'services/getMovies';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchName, setSearchName] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const query = searchParams.get('search');\n    if (!query) return;\n    getSearchName(query);\n  }, [searchParams]);\n\n  \n  const getSearchName = async Name => {\n    setIsLoading(true);\n    try {\n      const data = await getMovieSearch(Name);\n      const { results } = data;\n      setMovies(results);\n    } catch (error) {\n      console.log('Error:', error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleInputChange = e => {\n    setSearchName(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!searchName.trim()) return alert('Can not be empty');\n    setSearchParams({ search: searchName });\n    setSearchName('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          name=\"search\"\n          value={searchName}\n          onChange={handleInputChange}\n        ></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      {isLoading && <Loader />}\n      <MoviesList movies={movies} location={location} />\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst KEY_API = '394f8b3fe0f5b61255381d3d4a3e1141';\n\nconst getMoviesTrend = async () => {\n    const { data } = await axios.get(`/trending/all/day?api_key=${KEY_API}`);\n    return data;\n};\n\nconst getMovieId = async (id) => {\n    const {data} = await axios.get(`/movie/${id}?api_key=${KEY_API}&language=en-US`);\n    return data;\n}\n\nconst getMovieCast = async (id) => {\n    const {data} = await axios.get(`/movie/${id}/credits?api_key=${KEY_API}`);\n    return data;\n}\n\nconst getMovieReviews = async (id) => {\n    const {data} = await axios.get(`/movie/${id}/reviews?api_key=${KEY_API}`);\n    return data;\n}\n\nconst getMovieSearch = async (searchName) => {\n    const {data} = await axios.get(`/search/movie?query=${searchName}&api_key=${KEY_API}`);\n    return data;\n}\n\nexport { getMoviesTrend, getMovieId, getMovieCast, getMovieReviews, getMovieSearch };\n\n\n\n\n"],"names":["_jsx","DNA","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","_ref","movies","location","className","children","map","_ref2","original_title","id","undefined","Link","to","concat","state","from","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","searchName","setSearchName","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setMovies","useLocation","useEffect","query","get","getSearchName","_asyncToGenerator","_regeneratorRuntime","_callee","Name","data","results","_context","prev","next","getMovieSearch","sent","t0","console","log","message","finish","stop","_x","apply","arguments","_jsxs","_Fragment","onSubmit","e","preventDefault","trim","alert","search","type","placeholder","name","value","onChange","currentTarget","Loader","MoviesList","axios","KEY_API","getMoviesTrend","_yield$axios$get","abrupt","getMovieId","_callee2","_yield$axios$get2","_context2","getMovieCast","_ref3","_callee3","_yield$axios$get3","_context3","_x2","getMovieReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}